<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #><#+

        private void GenerateCalculation(int maxCount)
        {
            for (var first = 0; first <= maxCount; first++)
            {
                for (var second = 0; second <= maxCount; second++)
                {
                    GeneratePlus(first, second);
                    GenerateMinus(first, second);
                    GenerateMultiplication(first, second);
                    GenerateDivision(first, second);
                }
            }
        }

        private void GeneratePlus(int first, int second)
        {
            var calculatedResult = first + second;
            var s = GenerateCode(first, second, "+", $"{calculatedResult}");
            WriteLine(s);
        }

        private void GenerateMinus(int first, int second)
        {
            var calculatedResult = first - second;
            var s = GenerateCode(first, second, "-", $"{calculatedResult}");
            WriteLine(s);
        }
        
        private void GenerateMultiplication(int first, int second)
        {
            var calculatedResult = first * second;
            var s = GenerateCode(first, second, "*", $"{calculatedResult}");
            WriteLine(s);
        }
        
        private void GenerateDivision(int first, int second)
        {
            string stringResult;
            if (second == 0)
            {
                stringResult = "Null division not allowed!";
            }
            else
            {
                var calculatedResult = (float)first / (float)second;
                stringResult = calculatedResult.ToString();
            }

            var s = GenerateCode(first, second, "/", stringResult);
            WriteLine(s);
        }
        
        private string GenerateCode(int first, int second, string calculationOperator, string calculatedResult)
        {
            var stringBuilder = new StringBuilder();

            if (first == 0
                && second == 0
                && calculationOperator == "+")
            {
                stringBuilder.AppendLine($"            if (firstNumber == {first}");
                stringBuilder.AppendLine($"                && secondNumber == {second}");
                stringBuilder.AppendLine($"                && calculationOperator == \"{calculationOperator}\")");
            }
            else
            {
                stringBuilder.AppendLine($"            else if (firstNumber == {first}");
                stringBuilder.AppendLine($"                     && secondNumber == {second}");
                stringBuilder.AppendLine($"                     && calculationOperator == \"{calculationOperator}\")");
            }

            stringBuilder.AppendLine("            {");
            stringBuilder.AppendLine($"                result = \"{calculatedResult}\";");
            stringBuilder.AppendLine("            }");
            var s = stringBuilder.ToString();

            return s;
        }
#>